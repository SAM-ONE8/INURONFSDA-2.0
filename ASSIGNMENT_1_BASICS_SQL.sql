USE DATABSE DEMO_DATABSE;

-- LOADING TABLE 

CREATE OR REPLACE TABLE PRS_SALES_DATA 
( order_id VARCHAR(50),
  order_date DATE,
  ship_date DATE,
  ship_mode VARCHAR(100),
  customer_name VARCHAR(100),
  segment VARCHAR(100),
  state VARCHAR(100),
  country VARCHAR(100),
  market VARCHAR(100),
  region VARCHAR(100),
  product_id VARCHAR(100),
  category VARCHAR(100),
  sub_category VARCHAR(100),
  product_name VARCHAR(388),
  sales NUMBER(10,2),
  quantity INT,
  discount FLOAT,
  profit FLOAT ,
  shipping_cost FLOAT ,
  order_priority VARCHAR(50),
  year VARCHAR(10));
  

--QUESTION NO 1 SET PRIMARY KEY 
ALTER TABLE PRS_SALES_DATA 
ADD PRIMARY KEY (order_id);

DESCRIBE TABLE PRS_SALES_DATA ;

--QUESTION NO 2. CHECK THE ORDER DATE AND SHIP DATE TYPE AND THINK IN WHICH DATA TYPE YOU HAVE TO CHANGE.
 -- SIR NOT TAUGHT HOW TO DO THAT IN SQL, BUT FOR NOW I HAVE CHANGED IT TO DATE FORMATE IN EXCEL ONLY 

-- QUESTION NO-3  EXTACT THE LAST NUMBER AFTER THE - AND CREATE OTHER COLUMN AND UPDATE IT.
ALTER TABLE PRS_SALES_DATA
ADD extracted_number VARCHAR(10);

UPDATE PRS_SALES_DATA
SET extracted_number = SPLIT_PART(order_id, '-', 3);


--4.  FLAG ,IF DISCOUNT IS GREATER THEN 0 THEN  YES ELSE FALSE AND PUT IT IN NEW COLUMN FRO EVERY ORDER ID.
SELECT ORDER_ID, SALES ,QUANTITY, DISCOUNT, PROFIT, SHIPPING_COST,
    CASE 
        WHEN DISCOUNT > 0 THEN  'YES' 
        ELSE 'NO'
        END AS HAS_DISCOUNT
    FROM PRS_SALES_DATA;
--5.  FIND OUT THE FINAL PROFIT AND PUT IT IN COLUMN FOR EVERY ORDER ID.
-- ANSWER PROFITS ALREADY EXISTS 

--6.  FIND OUT HOW MUCH DAYS TAKEN FOR EACH ORDER TO PROCESS FOR THE SHIPMENT FOR EVERY ORDER ID.
ALTER TABLE PRS_SALES_DATA
ADD DATE_difference INT;

UPDATE PRS_SALES_DATA
SET date_difference = DATEDIFF('day', ORDER_DATE, SHIP_DATE);

SELECT ORDER_DATE, SHIP_DATE,date_difference FROM PRS_SALES_DATA;
/*
7 . FLAG THE PROCESS DAY AS BY RATING IF IT TAKES LESS OR EQUAL 3  DAYS MAKE 5,LESS OR EQUAL THAN 6 DAYS BUT
MORE THAN 3 MAKE 4,LESS THAN 10 BUT MORE THAN 6 MAKE 3,MORE THAN 10 MAKE IT 2 FOR EVERY ORDER ID.
*/
--TYPE 1
SELECT DATE_DIFFERENCE, 
    CASE WHEN DATE_DIFFERENCE <=3 THEN '*****(5)'
         WHEN DATE_DIFFERENCE <=6 THEN '****(4)'
         WHEN DATE_DIFFERENCE <10 THEN '***(3)'
         ELSE '**(2)'
    END AS RATING
    FROM PRS_SALES_DATA;

--TYPE 2 
SELECT  ORDER_ID, SHIP_DATE, DATE_DIFFERENCE,
CASE 
    WHEN DATEDIFF('day', ORDER_DATE, SHIP_DATE) <= 3 THEN 5
    WHEN DATEDIFF('day', ORDER_DATE, SHIP_DATE) <= 6 THEN 4
    WHEN DATEDIFF('day', ORDER_DATE, SHIP_DATE) <= 10 THEN 3
    ELSE 2
    END AS RATING 
    FROM PRS_SALES_DATA;
